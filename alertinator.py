#!/usr/bin/python2.7 -tt

# 	ALERTINATOR : This script sends email and SMS alerts after parsing logs.
#	Author: Yameen Rasheed
#	Date: 04 March 2013
#	Version: 0.02

import sys
import sendalerts

from datetime import datetime
from time import localtime, strftime
from ConfigParser import SafeConfigParser

# enter full path of config file
#config_file='/mnt/alertinator/config.ini'

def process_file(filename):
    f = open(filename, 'rU')
    for record in f:
        parse_log(record)

def parse_log(record):
    current_record = record.split("|")
    log_timestamp = to_datetime(current_record[0])
    last_run_timestamp = to_datetime(get_last_runtime())

    if log_timestamp > last_run_timestamp:                  #Check if the log record was written since the last check
        error_desc= current_record[-1].rstrip()
        file_name = current_record[1].rstrip()
        if error_desc.rstrip() == 'MissingSequence':
            error_text = '{} alert generated by file {}. Last received sequence was {}.'.format(error_desc, file_name,current_record[-2])  
        else:
            error_text = '{} alert generated by file {}'.format(error_desc, file_name)  
        print '___________' 
        print error_text
        sendalerts.send_alert(error_desc, error_text)
    return

def get_last_runtime():
    parser = SafeConfigParser()
    parser.read(config_file)
    return parser.get('LastUpdated', 'last_run_timestamp')

def set_last_runtime():
    parser = SafeConfigParser()
    current_time = strftime('%Y-%m-%d %H:%M:%S',localtime())
    parser.read(config_file)
    parser.set('LastUpdated','last_run_timestamp', current_time)
    with open(config_file, 'w') as configfile:
        parser.write(configfile)

def to_datetime(datestring):
       dt = datestring.strip()
       dt_obj = datetime.strptime(dt, '%Y-%m-%d %H:%M:%S')
       return dt_obj

def main():
    if len(sys.argv) == 1:
        print "Usage: ./alertinator.py filename {filenames})"
    else:
        for filename in sys.argv[1:]:
            process_file(filename)
    set_last_runtime()
     
if __name__ == '__main__':
    main()
       

